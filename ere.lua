--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y,y)local y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=83,58,19,72,43,26,82,10,75,46,62,78,48,97,21,63,56,93,25,95,78,53,61,36,90,43,29,65,41,37,20,33,53,54,69,33,83,51,76,85,51,65,72,89,25,66,80,59,20,55,39 while y~=63 do if z<=736 then if z<=407 then if z>=220 then if z<=278 then if z<=220 then bo=string.rep z=253 else if z<273 then ck=table.concat z=278 else z=320 bp=table.insert end end else if z>=366 then if z>371 then z=453 bf=setmetatable else do cf=(getfenv or function()return _ENV end)end z=407 end else z=366 ch=math.ldexp end end else if z<=80 then if z>64 then z=118 cj=string.byte else z=80 ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=nil end else if z<=118 then bt=string.char z=158 else if z>161 then z=220 do bk=string.gsub end else z=188 by=string.sub end end end end else if z<=559 then if z<=479 then if z<471 then do bz=select end z=479 else do bd=type end z=504 end else if z>=539 then if z>544 then do ca=math.floor end z=579 else z=559 bm=math.abs end else ba=(function(bm,bo,bo,bo)if'number'==bd(bm)then do return true end else return false end end)z=539 end end else if z>=687 then if z>=712 then if z>718 then cb={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,i,3,n,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,x,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,r,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,o,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,w,8,9,6,7,4,5,2,3,0,1,},{15,14,13,a,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}z=756 else br=bkfunction(a,i,i,i,i)return be[ce(a,16)]end)z=736 end else for a=0,255 do be[a]=bt(a);end z=712 end else if z<=579 then bc=(unpack or table.unpack)z=617 else if z>623 then be={}z=687 else ce=tonumber z=656 end end end end end else if z>=1053 then if z<=1154 then if z>=1102 then if z<=1102 then z=1135 bh=function(a,a,a,a)local a,i,n,o=78,46,31,51,34,92,15,14,91,19,50,31,51,19,65 while a~=31 do if i<=99 then if i>=76 then if i<90 then i=99 o=bl()else i=118 do n=br:sub(bj,(bj+o-1))end end else i=76 n,o=nil end else if i<=118 then i=136 bj=(bj+o);else if i<150 then i=159 return n;else a=31;end end end end end else if z<1152 then bi=function(...)return{...},bz(c,...)end z=1154 else z=1180 bv={}end end else if z<1073 then z=1076 cd=function()local a,c do c,a=cj(br,bj,(bj+2))end bj=(bj+2);return((a*256)+c);end else z=1102 bg=function()local a,c,i,n,o,r,w,x=61,40,84,10,34,69,35,80,71,98,50,49,54,58,36,99,87,50,72 while a~=43 do if c>=146 then if c<=216 then if c<=146 then c=167 i=ci(20,w,11)else if c<212 then r=(ci(0,w,20)*4294967296+n)c=216 else c=236 o=1 end end else if c>=254 then if c>263 then a=43;else c=300 do return(x*(2^(i-1023))*(r/cc+o))end end else c=254 if 0==i then do if 0~=r then i=1 o=0 else return(x*0)end end elseif not(i==2047)then else if not(r~=0)then do return(x*(0/0))end else return(x*(1/0))end end end end else if c<=56 then if c>45 then c=85 n=bl()else i,n,o,r,w,x=nil c=56 end else if c>=102 then if c<117 then if((n==0 and w==0))then return 0 end c=119 else x=((-1)^ci(31,w,1))c=146 end else c=102 w=bl()end end end end end end end else if z<=1249 then if z<=1180 then z=1208 cl=function(a,c,c,c,c)local c,i,n,o,r,w,x,ba=74,56,73,50,21,88,30,80,75,19,62,37,25,91,22,20,58,10,38,28,47,49,48,60,15 while c~=40 do if i>=268 then if i>=411 then if i<=430 then if i>414 then r[148]=o i=479 else for c=1,n do local bd,be,bk,bm=54,57,51,88,45,33,99,12,69,12,27,82 while bd~=33 do if be<=116 then if be>=76 then if be<110 then bm=cg()be=116 else do bk=nil end be=148 end else be=76 bk,bm=nil end else if be>=163 then if be<204 then be=210 o[c]=bk;else bd=33;end else if(4==bm)then bk=(not(cg()==0));elseif(2==bm)then do bk=bg();end elseif(not(bm~=1))then bk=bh();elseif(not(bm~=0))then bk=a[bh()];end;be=163 end end end end i=430 end else if i<=479 then r[145]=cg();i=509 else if i<538 then i=547 return r;else break end end end else if i>=358 then if i<379 then i=386 n=bl()else do o={}end i=411 end else if i<311 then for a=1,bl()do local c,bd,be,bg,bh,bk=62,33,66,71,45,53,60,45,49,49,18,59,65,92,96,54,11,77,13,16,41,10,47,34,84 while c~=37 do if bd>=323 then if bd<=441 then if bd>=414 then if bd<434 then do be[62]=bs(bg,12,33);end bd=441 else bd=487 be[76]=bs(bk,21,29);end else if bd>325 then bd=414 be[130]=bs(bk,3,11);else bd=365 be[40]=bs(bg,1,11);end end else if bd>=568 then if bd>=604 then if bd>608 then c=37;else bd=649 do ba[a]=be;end end else bd=604 be[d]=-be[76]end else if bd>492 then bd=568 be[104]=-be[130]else be[188]=bs(bk,12,20);bd=523 end end end else if bd<=141 then if bd<=51 then if bd>35 then be={{},nil}bd=93 else bd=51 be,bg,bh,bk=nil end else if bd>98 then be[t]={};bd=156 else do be[122]=cg();end bd=141 end end else if bd<=172 then if bd<165 then while(cg()==1)do for a=1,cg()do be[182][a]={cg()==0,bl()}end break end bd=172 else bd=197 do bk=bl()end end else if bd>=246 then if bd>251 then bd=323 be[54]=bh else bd=285 bh=bs(bk,1,2)end else bd=246 bg=bl()end end end end end end i=316 else r[149]=ba;i=358 end end end else if i<=112 then if i>=91 then if i>99 then r={}i=145 else i=112 x={}end else if i<65 then i=72 n,o,r,w,x,ba=nil else ba={}i=91 end end else if i>=210 then if i<249 then do for a=1,bl()do do x[a-1]=cl();end end end i=253 else i=268 r[60]=x;end else if i<185 then i=191 w=bl()else for a=(#bv+1),(#bv+w)do local c,d,n,o,r=56,48,97,36,50,22,52,89,83,15,36,49,28,26,53,16,64,23,92,81,72,42,85 while c~=37 do if d<=232 then if d>=168 then if d>=206 then if d>208 then o[40]=bs(r,1,11);d=247 else d=232 o[54]=bs(n,1,2);end else if d>172 then o[188]=cg();d=206 else d=190 r=bl()end end else if d>=111 then if d<128 then d=134 o[122]=cg();else n=bl()d=168 end else if d>50 then d=111 do o={}end else n,o,r=nil d=81 end end end else if d>=384 then if d>=451 then if d>460 then break else d=483 do bv[a]=o;end end else if d>393 then do o[12]=-o[76]end d=451 else o[104]=-o[130]d=429 end end else if d>=314 then if d<351 then d=355 o[76]=bs(n,h,p);else d=384 o[62]=bs(r,12,33);end else if d<273 then do o[f]=bs(n,3,11);end d=275 else o[193]=bs(n,12,20);d=314 end end end end end end i=210 end end end end end end else if z>1217 then z=1273 bw={}else bn={}z=1249 end end else if z>=1305 then if z>1313 then y=63;else z=1342 return bu(cl(cf()),{},cf())();end else z=1305 bu=function(a,c,d,f,f)local f,h,i,n,o n=a[149]do o=a[148]end h=a[145]i=a[60]do f=bn end return function(...)local a,f,p,r,t,w,x,y,ba do ba=1 end r=-1 a=-1 x={}p={...}y=(bz('#',...)-1)do w={}end do t={}end do for a=0,y do do if(not(a<h))then x[(a-h)]=p[(a+1)];else t[a]=p[(a+1)];end;end end;end f=(y-h+1)while true do local a,f,h,p,x,y,bd,be,bg,bh y=n[ba]do bg=y[40]end do bh=y[122]end p=y[e]x=y[193]do a=y[76]end bd=y[188]h=y[104]do f=y[62]end be=y[12]do if not(bg<27)then do if not(bg>39)then if not(bg>32)then if not(bg>29)then if not(bg<q)then if 28==bg then local e e=p t[e](bc(t,(e+1),f))else while((t[p]~=t[a]))do ba=f;break end end else local e e=p t[e]=t[e](bc(t,e+1,f));end else do if not(bg<31)then if(bg>31)then t[p]=c[f];else do c[f]=t[p];end end else if(not(t[p]==o[y[76]]))then ba=f;end;end end end else if not(bg>35)then do if not(y[40]<34)then if(y[40]>34)then local e,h do h=p end e=t[f]t[(h+1)]=e;t[h]=e[o[a]];else local e e={}do if(#w>0)then do for h=1,#w do local n do n=w[h]end for h=0,#n do local q,x,bd q=n[h]x=q[1]bd=q[2]do while x==t and bd>=0 do e[bd]=x[bd]q[1]=e break end end end end end end end return y[y[76]],0,bg;end else t[y[130]]=(t[f]+o[a]);end end else if not(bg>37)then if(bg<37)then local e,h,n do e=p end do n={t[e](bc(t,e+1,r))}end h=0 for q=e,a do h=(h+l);t[q]=n[h];end else local e e=p t[e](t[(e+1)])end else if(bg<39)then t[p][o[y[v]]]=t[a];else t[p]=d[o[f]];end end end end else if not(bg<47)then if not(bg<50)then do if not(bg>51)then do if 50==y[40]then for e=p,f do t[e]=nil;end;else t[p]={};end end else if 52==y[40]then local e,h,l do l=p end do h=t[(l+2)]end e=(t[l]+h)do t[l]=e;end if((h>u))then if(not(e>t[l+1]))then ba=y[62];t[(l+3)]=e;end elseif(not(e<t[l+1]))then ba=f;t[(l+3)]=e;end else do do return t[y[130]]end end end end end else do if not(bg>47)then t[p]=(t[f]/o[a]);else if(bg<49)then do t[p][t[f]]=t[a];end else local e,h do e=y[62]end h=t[e]for l=(e+1),a do h=(h..t[l]);end;t[p]=h;end end end end else do if not(bg>42)then if not(bg<41)then if(bg>41)then while((t[p]<t[a]))do ba=y[62];break end else t[p]=(t[f]+t[a]);end else t[p]=o[y[62]]end else do if not(bg>44)then do if(bg<m)then local e,h,l,m,n l=p e=a m=(l+2)h={t[l](t[l+1],t[m])}for q=1,e do t[(m+q)]=h[q]end n=t[(l+3)]if n then do t[m]=n end else do ba=f;end end;else if((o[p]<t[a]))then ba=y[b];end;end end else if(bg<46)then t[p]=(t[f]%o[a]);else t[p][o[y[62]]]=o[y[76]];end end end end end end end end else if not(bg>12)then if not(y[g]<6)then if not(bg>8)then do if not(bg<7)then if(bg>7)then t[p]=(t[f]*o[y[76]]);else local b,e,g b=y[130]e=t[b]do g=t[(b+2)]end if((g>0))then if((e>t[b+1]))then ba=f;else do t[(b+3)]=e;end end elseif((e<t[b+1]))then ba=f;else do t[(b+3)]=e;end end end else local b b=p do return t[b](bc(t,(b+1),f))end;end end else if not(bg>10)then if(y[40]<10)then t[p]=#t[f];else t[p]=(not t[f]);end else if not(bg~=11)then local b,e,g,h b=p g,e=bi(t[b](bc(t,(b+1),f)))r=(e+b-1)do h=0 end for e=b,r do h=(h+1);t[e]=g[h];end;else do t[p]=(t[f]*t[y[76]]);end end end end else if not(bg>2)then if not(bg<1)then do if not(bg~=1)then local b b=y[130]do t[b]=t[b](bc(t,b+1,r));end else t[p]();end end else t[p]=bu(i[f],nil,d);end else if not(bg>3)then t[p]=t[f];else if 4==y[40]then t[p]=(t[f]-t[a]);else t[p]=t[f][o[a]];end end end end else do if not(bg>19)then do if not(bg<16)then do if not(bg>17)then do if(bg<17)then if(o[y[76]]==t[p])then do ba=y[62];end end;else local b,e,g,h do b=p end e,g=bi(t[b](t[(b+j)]))r=(g+b-1)h=0 for g=b,r do h=(h+1);t[g]=e[h];end;end end else if(bg<19)then ba=f;else local b b=p t[b]=t[b](t[b+1]);end end end else do if not(bg>13)then while(t[p]<o[y[76]])do ba=f;break end else if(bg>14)then t[p]=t[f][t[a]];else t[p]=nil;end end end end end else if not(bg>22)then if not(bg>20)then o=bn[p](o)else do if 21==bg then if not t[p]then ba=f;end;else local b,e,g g=i[y[62]]e=nil b={}e=bf({},{__index=function(h,h)local h=b[h];return h[1][h[2]];end,__newindex=function(h,h,i)local h=b[h]h[1][h[2]]=i;end;});do for h=1,a do local a a=y[182][h]if a[1]then b[(h-1)]={t,a[2],nil};else do b[(h-1)]={c,a[2],nil,nil};end end;w[(#w+1)]=b;end;end t[p]=bu(g,e,d);end end end else if not(bg>24)then if 23==bg then local a,b a=y[130]b={}if(#w>0)then for c=1,#w do local d d=w[c]do for c=0,#d do local e,g,h h=d[c]g=h[1]e=h[2]if(g==t and e>=0)then b[e]=g[e]h[1]=b end end end end end return bc(t,a,r);else local a do a=p end t[a]=t[a]();end else if(bg<26)then if t[p]then ba=f;end;else t[p]=(not(f==0));end end end end end end end end ba=(ba+1);end;end;end end end end else if z<=856 then if z>=801 then if z>=828 then if z<847 then cm=2 z=856 else z=897 for a=1,31 do bq[a]=cm do cm=(cm*2)end end end else do bq={[0]=s}end z=828 end else if z<767 then z=773 do bb=''end else z=801 cc=(2^52)end end else if z>=992 then if z>=1014 then if z<1032 then bl=function()local a,b,c,d b,d,a,c=cj(br,bj,(bj+3))bj=(bj+4);do return((c*16777216)+(a*65536)+(d*256)+b);end end z=1035 else z=1053 do cg=function()local a do a=cj(br,bj,bj)end bj=(bj+1);return a;end end end else do bj=1 end z=1014 end else if z<=897 then ci=function(a,b,c,d,d)local d,e,f=83,68,31,81,13,40,62,42,49,34,93,75,65 while d~=34 do if e<=159 then if e>=116 then if e>122 then e=179 f=((b/bq[a])%bq[c])else do f=nil end e=159 end else f=nil e=116 end else if e<=179 then f=(f-f%1)e=197 else if e>199 then break else e=236 return f end end end end end z=925 else if z>933 then bs=function(a,b,c,d,d,d)local d do d=((a/2^(b-1))%2^((c-1)-(b-1)+1))end return(d-d%1);end z=992 else bx=(bit_lib and bit_lib.bxor or function(a,b)a=a%(2^32)b=b%(2^32)local c,d=0,1 while a>0 and b>0 do local e,f=a%16,b%16 c=c+cb[e+1][f+1]*d a=(a-e)/k b=(b-f)/16 d=d*16 end c=c+a*d+b*d return c end)z=971 end end end end end end end end)(12,62,'#',12,130,130,40,21,0,1,16,1,44,2,8,29,28,5,1,182,0,62,11,13)end
